// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using darkside_backend.Database;

#nullable disable

namespace darkside_backend.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230328214100_fix_prod_id_type")]
    partial class fix_prod_id_type
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductImagesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float?>("SalePerc")
                        .HasColumnType("real");

                    b.Property<int?>("capacity")
                        .HasColumnType("int");

                    b.Property<float?>("height")
                        .HasColumnType("real");

                    b.Property<float?>("length")
                        .HasColumnType("real");

                    b.Property<int?>("strength")
                        .HasColumnType("int");

                    b.Property<int?>("vp")
                        .HasColumnType("int");

                    b.Property<float?>("weight")
                        .HasColumnType("real");

                    b.Property<float?>("width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("Category");

                    b.HasIndex("Id");

                    b.HasIndex("IsHidden");

                    b.HasIndex("Name");

                    b.HasIndex("Price");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductTasteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TasteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TasteId");

                    b.ToTable("ProductTastes");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.PurchaseItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.PurchaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.TasteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Tastes");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Id");

                    b.HasIndex("Role");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductImagesModel", b =>
                {
                    b.HasOne("darkside_backend.Models.Entities.ProductModel", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductModel", b =>
                {
                    b.OwnsOne("darkside_backend.Models.ApiModels.ProductCreatorModel", "CreatorFull", b1 =>
                        {
                            b1.Property<Guid>("ProductModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductModelId");

                            b1.HasIndex("Name");

                            b1.ToTable("Products");

                            b1.ToJson("CreatorFull");

                            b1.WithOwner()
                                .HasForeignKey("ProductModelId");

                            b1.OwnsOne("darkside_backend.Models.ApiModels.AddressModel", "Address", b2 =>
                                {
                                    b2.Property<Guid>("ProductCreatorModelProductModelId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("Postcode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductCreatorModelProductModelId");

                                    b2.HasIndex("Country");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductCreatorModelProductModelId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.Navigation("CreatorFull")
                        .IsRequired();
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductTasteModel", b =>
                {
                    b.HasOne("darkside_backend.Models.Entities.ProductModel", "Product")
                        .WithMany("Tastes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("darkside_backend.Models.Entities.TasteModel", "Taste")
                        .WithMany("ProductsTaste")
                        .HasForeignKey("TasteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Taste");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.PurchaseItemModel", b =>
                {
                    b.HasOne("darkside_backend.Models.Entities.ProductModel", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("darkside_backend.Models.Entities.PurchaseModel", "Purchase")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.PurchaseModel", b =>
                {
                    b.HasOne("darkside_backend.Models.Entities.UserModel", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.ProductModel", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("PurchaseItems");

                    b.Navigation("Tastes");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.PurchaseModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.TasteModel", b =>
                {
                    b.Navigation("ProductsTaste");
                });

            modelBuilder.Entity("darkside_backend.Models.Entities.UserModel", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
